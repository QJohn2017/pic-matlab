function h5write_fields_complement(pic_orig)
% H5WRITE_FIELDS_COMPLEMENT Writes complementory info to h5 fields file. 
%
%   H5WRITE_FIELDS_COMPLEMENT(picobject)
%
%   Data added:
%     A - magnetic vector potential Ay
%     UB - Magnetic energy
%     A_xline - A value at main X line
%     x_xline - x location of main X line
%     z_xline - z location of main X line
%     Ey_xline - Ey at main X line (reconnection electric field)
%


timesteps = pic_orig.twpe;
for it = 1:numel(timesteps)
  Bx = pic_tmp.Bx;
  By = pic_tmp.By;
  Bz = pic_tmp.Bz;
  Babs = sqrt(Bx.^2+By.^2+Bz.^2);
  UB(it) = sum(Babs(:).^2)/2;  
    
      By = pic_tmp.By;
      Babs = sqrt(Bx.^2+By.^2+Bz.^2);
      UB(it) = sum(Babs(:).^2)/2;  
    end
    A = vector_potential(pic_tmp.xi,pic_tmp.zi,Bx,Bz);
    try
    h5write_fields_ancillary(pic_tmp,pic_tmp.twpe,'A',A)  
    catch
      disp('Could not write A.')
    end
  else
    A = pic_tmp.A;
  end
  Aall(:,:,it) = A;
  
  [Ainds,Avals] = saddle(A,'sort');
  xXline(it) = pic_tmp.xi(Ainds(1,1));
  zXline(it) = pic_tmp.zi(Ainds(1,2));  
  Aval(it) = Avals(1);
  EyXline(it) = mean(mean(pic_tmp.xlim(xXline(it)+[-0.1 0.1]).zlim(zXline(it)+[-0.1 0.1]).Ey));
  for iX = 1:numel(Avals)
    xXlineAll = [xXlineAll pic_tmp.xi(Ainds(iX,1))];
    zXlineAll = [zXlineAll pic_tmp.zi(Ainds(iX,2))];
    EyXlineAll = [EyXlineAll mean(mean(pic_tmp.xlim(xXlineAll(end)+[-0.1 0.1]).zlim(zXlineAll(end)+[-0.1 0.1]).Ey))];
    scatter(pic_tmp.twci,xXlineAll(end),abs(EyXlineAll(end))*100+1,iX)
    drawnow
  end
end
